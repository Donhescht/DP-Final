{
    "collab_server" : "",
    "contents" : "NFLGamePredictor\n========================================================\nauthor: Donald Hescht\ndate: January 21, 2017\nwidth: 1440\nheight: 900\ntransition: linear \n<style>\n.footer {\ncolor: black;\nbackground: #E8E8E8;\nposition: fixed;\ntop: 90%;\ntext-align:center;\nwidth:100%;\n}\n</style>\n<div class=\"footer\">NFL Game Score Predictor</div>\n\nThis presentation covers the Shiny application implement, proof of concept, adhering to the customer supplied requirements.  The prototype will be described followed by a phase two and three proposal.  \n\nThe Proof of Concept prototype can be found here:\n\nhttps://donhescht.shinyapps.io/NFLGamePredictor/\n\nNFL Game Score Predictor (Analysis)\n========================================================\nThe follow team analysis fostered the simple PoC solution.\n- Historical Turnovers Forced (TOF) improves a team's points.\n- Historical Points For PF (offense) predicts future scoring.\n- Historical Points Allowed PA (defense) predicts opponent scoring.\n\n```{r, echo=FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\n\nset.seed(100)\nTOPD = read.csv(\"TurnOverPointData.txt\")  # [T]urn [O]ver [P]oint [D]ifferential \nNFLMean <- TOPD %>% group_by(home_team) %>% mutate(Wins = as.numeric((home_score - away_score) > 0)) %>% summarise_all(mean) %>% select(home_team, home_score, away_score, Wins) \n\nplot(TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference',\n     xlab = \"Turnover Difference\", ylab= \"Point Difference\") \nabline(lm(PointDifHome ~ TODifHome, TOPD ), col=\"red\" ) \n\nbc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) + \n      geom_point(shape = 21, fill = \"blue\") + ggtitle(\"Home Team Mean PF vs PA\") +\n     labs( x = \"PA Mean\", y = \"PF Mean\") + theme_bw() + theme() + scale_size(range = c(1,20))\nbc\n```\n\nNFL Game Predictor (Design)\n========================================================\n- Created NFL Database using https://github.com/BurntSushi/nflgame \n- Formula below uses data from 2009-2014 to predict score difference\n- Compare actual game score difference to predicted.\n\n<small>\n$$\nPts\\left(t,o\\right)=PFGain\\cdot PFAvg\\left( Team \\right)\\; \\cdot \\; PAGain\\cdot \\left( \\frac{PAAvg\\left(O\\right)}{PA.NFL.Avg} \\right)\\; \\; +\\; \\; TOGain\\cdot TOF\\left( team \\right)\n$$\n</small>\n\nNFL Game Score Predictor (Implementation)  \n========================================================\n\n![Solution](Solution.png)\n***\n- PoC predicting 2015 season\n- Solution is self documenting\n- Sliders:\n    - 1) Sliders control equation gain\n    - 2) The Histogram of game score errors\n    - 3) Summary of Histogram stats \n\nNFL Game Score Predictor (Next Phases)\n========================================================\n- Predictor shows promise for predicting winner and spread.\n- Phase 2 ($100K)\n    - Improve model with machine learning\n    - Increase NFL features for learning\n    - Add page to show prediction of next game week\n- Phase 3 (+$300K)\n    - Implement model for Web and Mobile devices\n    - Use Boot Strap as framework\n\n",
    "created" : 1485006889622.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4243872699",
    "id" : "E2395653",
    "lastKnownWriteTime" : 1485094013,
    "last_content_update" : 1485094013251,
    "path" : "~/Documents/Coursera/DP-Final/NFLGamePredictor.Rpres",
    "project_path" : "NFLGamePredictor.Rpres",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_presentation"
}