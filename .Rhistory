TOPD <<- TOPD %>% mutate(PWins = as.numeric(PredPtsDif > 0))
TOPD <<- TOPD %>% mutate(PLosses = as.numeric(PredPtsDif <= 0))
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
PS["Total", ] < colSums(PS)
PS
colSums(PS)
runApp()
colSums(PS)
runApp()
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
PS["Total",] <- colSums(PS)
View(PS)
colSums(PS)
PS
PS[Total,] <- colSums(PS)
PS["Total",] <- colSums(PS)
PS
as.data.frame(colSums(PS))
runApp()
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
as.data.frame(colSums(PS))
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
t(as.data.frame(colSums(PS)))
runApp()
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses))
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses)
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- t(as.data.frame(colSums(PS)))
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses)
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- as.data.frame(t(colSums(PS)))
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses)
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- as.data.frame(colSums(PS))
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses)
t(TPD)
runApp()
runApp()
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- as.data.frame(colSums(PS))
TPD$Accuracy <- TPD$WinCorrect / (TPD$Wins+TPD$Losses)
t(TPD)
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- as.data.frame(colSums(PS))
PS <- TOPD %>% select(Wins, Losses, PWins, PLosses,WinCorrect)
TPD <- as.data.frame(colSums(PS))
TPD[6] <- TPD[5] / (TPD[1]+TPD[2])
TPD <- data.frame(colSums(PS))
typeof(TPD)
is.data.frame(TPD)
View(TPD)
mutate(TPD, Accuracy = WinCorrect/(Wins+Losses))
TPD
mutate(TPD, Accuracy = TPD$WinCorrect/(Wins+Losses))
mutate(TPD, Accuracy = TPD$WinCorrect/(TPD$Wins+TPD$Losses))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summary(TOPD)
summary(TOPD$PredPtsError)
mean(TOPD$PredPtsError)
sd(TOPD$PredPtsError)
?table
table(TOPD$PredPtsError)
PDS <- summary(TOPD$PredPtsError)
runApp()
runApp()
runApp()
runApp()
runApp()
TOPD.Stats <- summary(TOPD$)
TOPD <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
summary(TOPD)
x <- summary(TOPD)
as.data.frame(x)
x <- summary(TOPD$home_score)
as.data.frame(x)
x
runApp()
dimanmes(x)
dimnames(x)
as.data.frame(x)
x[1]
typeof(x[1])
runApp()
runApp()
runApp()
runApp()
runApp()
set.seed(100)
TOPDAll <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPDALL %>% filter(gameid < 2015000000)
set.seed(100)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.ALL %>% filter(gameid < 2015000000)
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD.Test <- TOPD.All %>% filter(gameid > 2015000000)
runApp()
2015000000 / 1000000
2015002222 / 1000000
round(2015002222 / 1000000, 0)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0))
set.seed(100)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0)-2009)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>% mutate(HW = 'H') %>%
mutate(Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats <- rbind(Mean.Stats.Away,Mean.Stats.Home)
Mean.PA <- mean(Mean.Stats$Mean.PA)
Mean.PF <- mean(Mean.Stats$Mean.PF)
Mean.Stats.Years <- rbind(Mean.Stats.Away,Mean.Stats.Home)
Mean.Weights <- Mean.Stats.Years$PlayYear/(max(Mean.Stats.Years$PlayYear)- min(Mean.Stats.Years$PlayYear))
Mean.Stats <- weighted.mean(Mean.Stats.Years, Mean.Weights)
length(Mean.Weights)
Mean.Stats.PF <- weighted.mean(Mean.Stats.Years$Mean.PF, Mean.Weights)
Mean.Stats.Year$Weight <- Mean.Stats.Years$PlayYear/(max(Mean.Stats.Years$PlayYear)- min(Mean.Stats.Years$PlayYear))
WtDen <- (max(TOPD$PlayYear)- min(TOPD$PlayYear))
set.seed(100)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0)-2008)
TOPD.Test <- TOPD.All %>% filter(gameid > 2015000000)
WtDen <- (max(TOPD$PlayYear)- min(TOPD$PlayYear))+1
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>% mutate(HW = 'H') %>%
mutate(Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Year <- rbind(Mean.Stats.Away,Mean.Stats.Home)
Mean.PA <- mean(Mean.Stats$Mean.PA)
Mean.PF <- mean(Mean.Stats$Mean.PF)
set.seed(100)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0)-2008)
TOPD.Test <- TOPD.All %>% filter(gameid > 2015000000)
WtDen <- (max(TOPD$PlayYear)- min(TOPD$PlayYear))+1
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>% mutate(HW = 'H') %>%
mutate(Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Year <- rbind(Mean.Stats.Away,Mean.Stats.Home)
Mean.PA <- mean(Mean.Stats$Mean.PA)
Mean.PF <- mean(Mean.Stats$Mean.PF)
set.seed(100)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0)-2008)
TOPD.Test <- TOPD.All %>% filter(gameid > 2015000000)
WtDen <- (max(TOPD$PlayYear)- min(TOPD$PlayYear))+1
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>% mutate(HW = 'H') %>%
mutate(Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Year <- rbind(Mean.Stats.Away,Mean.Stats.Home)
runApp()
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(PlayerYear = PlayerYear, Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
TOPD.All <- read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD <- TOPD.All %>% filter(gameid < 2015000000)
TOPD <- mutate(TOPD, PlayYear = round(gameid/1000000,0)-2008)
TOPD.Test <- TOPD.All %>% filter(gameid > 2015000000)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(PlayerYear = PlayerYear, Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>%
mutate(HW = 'H') %>%
mutate(PlayYear = PlayYear, Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW)
Mean.Stats.Year <- rbind(Mean.Stats.Away,Mean.Stats.Home)
Mean.Stats.Year <- mutate(Mean.Stats.Year,Weight=PlayYear/WtDen )
Mean.PA <- weighted.mean(Mean.Stats.Year$Mean.PA,Mean.Stats.Year$Weight)
Mean.PF <- weighted.mean(Mean.Stats.Year$Mean.PF, Mean.Stats.Year$Weight)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
mutate(Mean.Stats.Away, Weight=PlayYear/WtDen )
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>%
mutate(HW = 'H') %>%
mutate(PlayYear = PlayYear, Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
mutate(Mean.Stats.Away, Weight=PlayYear/WtDen )
Mean.Stats.Year <- rbind(Mean.Stats.Away, Mean.Stats.Home)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, away_turnovers, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score, Mean.PA = home_score, Mean.TO = away_turnovers, Mean.FTO=home_turnovers) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
mutate(Weight=PlayYear/WtDen )
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>%
summarise_all(mean) %>% select(PlayYear, home_team, home_score, home_turnovers, away_score, away_turnovers) %>%
mutate(HW = 'H') %>%
mutate(PlayYear = PlayYear, Team = home_team, Mean.PF=home_score, Mean.PA = away_score, Mean.TO = home_turnovers, Mean.FTO = away_turnovers) %>%
select(PlayYear,Team, Mean.PF, Mean.PA, Mean.TO, Mean.FTO,HW) %>%
mutate(Weight=PlayYear/WtDen )
Mean.Stats.Year <- rbind(Mean.Stats.Away, Mean.Stats.Home)
Mean.PA <- weighted.mean(Mean.Stats.Year$Mean.PA, Mean.Stats.Year$Weight)
Mean.PF <- weighted.mean(Mean.Stats.Year$Mean.PF, Mean.Stats.Year$Weight)
Mean.Stats <- rbind(Mean.Stats.Away, Mean.Stats.Home)
Mean.PA <- weighted.mean(Mean.Stats$Mean.PA, Mean.Stats.Year$Weight)
Mean.PF <- weighted.mean(Mean.Stats$Mean.PF, Mean.Stats.Year$Weight)
Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2]
GetScoreDif <- function(Home.Team, Away.Team, PF.Gain,PA.Gain, TO.Gain ) {
hteampf <-  as.numeric(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2])
ateampf <-  as.numeric(Mean.Stats.Away[Mean.Stats.Away$Team == Away.Team,2])
hteampa <-  as.numeric(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,3])
ateampa <-  as.numeric(Mean.Stats.Away[Mean.Stats.Away$Team == Away.Team,3])
hteamfto <-  as.numeric(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,5])
ateamfto <-  as.numeric(Mean.Stats.Away[Mean.Stats.Away$Team == Away.Team,5])
scoredif <- (PF.Gain * hteampf * (PA.Gain * (ateampa/Mean.PA)) +
(TO.Gain * hteamfto)) -
(PF.Gain * ateampf * (PA.Gain * (hteampa/Mean.PA)) +
(TO.Gain * ateamfto))
return(scoredif)
}
Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2]
Mean.Stats.Home[Mean.Stats.Home$Team == 'ARI',2]
Weights = c(1,2,3,4,5,6)/WtDen
runApp()
weighted.mean(Mean.Stats.Home[Mean.Stats.Home$Team == 'ARI',2],Weights)
Mean.Stats.Home[Mean.Stats.Home$Team == 'ARI',2]
Weights
weighted.mean(t(Mean.Stats.Home[Mean.Stats.Home$Team == 'ARI',2]),Weights)
runApp()
weighted.mean(t(Mean.Stats.Home[Mean.Stats.Home$Team == 'ARI',2]),Weights)
runApp()
weighted.mean(t(as.numeric(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2])),Weights)
Home.Team='ARI'
weighted.mean(t(as.numeric(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2])),Weights)
weighted.mean(t(Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2]),Weights)
Mean.Stats.Home[Mean.Stats.Home$Team == Home.Team,2]
runApp()
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
group_by(away_team,PlayYear) %>% summarise_all(sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
group_by(Team,PlayYear) %>% summarise_all(sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
group_by(Team,PlayYear) %>% summarise_if(is.numeric, sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.FTO)
group_by(Team,PlayYear) %>% summarise_if(is.numeric, sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(PlayYear = PlayYear, Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(PlayYear, Team, Mean.PF, Mean.PA, Mean.FTO)
group_by(Team) %>% summarise_if(is.numeric, sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(Team, Mean.PF, Mean.PA, Mean.FTO)
group_by(Team) %>% summarise_if(is.numeric, sum)
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(Team, Mean.PF, Mean.PA, Mean.FTO) %>%
group_by(Team) %>% summarise_if(is.numeric, sum)
WtDen <- sum(unique(TOPD$PlayYear))
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(Team, Mean.PF, Mean.PA, Mean.FTO) %>%
group_by(Team) %>% summarise_if(is.numeric, sum)
View(Mean.Stats.Away)
WtDen <- sum(unique(TOPD$PlayYear))
Mean.Stats.Away <- TOPD %>% group_by(away_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,away_team, away_score, home_score, home_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(Team = away_team, Mean.PF=away_score * Weighted, Mean.PA = home_score * Weighted, Mean.FTO=home_turnovers *Weighted) %>%
select(Team, Mean.PF, Mean.PA, Mean.FTO) %>%
group_by(Team) %>% summarise_if(is.numeric, sum)
Mean.Stats.Home <- TOPD %>% group_by(home_team,PlayYear) %>% summarise_all(mean) %>%
select(PlayYear,home_team, home_score, away_score, away_turnovers) %>%
mutate(HW = 'A') %>%
mutate(Weighted=PlayYear/WtDen ) %>%
mutate(Team = home_team, Mean.PF=home_score * Weighted, Mean.PA = away_score * Weighted, Mean.FTO=away_turnovers *Weighted) %>%
select(Team, Mean.PF, Mean.PA, Mean.FTO) %>%
group_by(Team) %>% summarise_if(is.numeric, sum)
runApp()
shiny::runApp()
# NFL Predictor Prototype
# NFL Predictor Prototype
# NFL Predictor Prototype
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD.Home.Fit <- lm(PointDifHome ~ TODifHome, TOPD )
p <- plot_ly(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
ibrary(plotly)
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD.Home.Fit <- lm(PointDifHome ~ TODifHome, TOPD )
p <- plot_ly(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
library(plotly)
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD.Home.Fit <- lm(PointDifHome ~ TODifHome, TOPD )
p <- plot_ly(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
library(webshot)
install.packages("webshot")
library(webshot)
library(plotly)
library(webshot)
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD.Home.Fit <- lm(PointDifHome ~ TODifHome, TOPD )
p <- plot(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
p <- plot_ly(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
library(plotly)
library(webshot)
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
TOPD.Home.Fit <- lm(PointDifHome ~ TODifHome, TOPD )
p <- plot_ly(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
p <- plot(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome, type='scatter', mode='markers', name = 'Pts', showlegend=FALSE ) %>% add_lines(y = fitted(TOPD.Home.Fit), name = 'Model Fit', showlegend = TRUE) %>% layout(title = 'Home Team Point Difference Versus Turnover Difference', xaxis = list(title = 'Turnover Difference'), yaxis= list(title='Point Difference'))
p
plot(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome,  name = 'Pts', main = 'Home Team Point Difference Versus Turnover Difference' )
plot(data = TOPD, x = TOPD$TODifHome, y = TOPD$PointDifHome,  name = 'Pts', main = 'Home Team Point Difference Versus Turnover Difference' )
abline(TOPD, lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
plot(data = TOPD, TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference' )
plot(data = TOPD, TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference' )
abline(TOPD, lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
plot(data = TOPD, TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference',
xlab = "Turnover Difference", ylab= "Point Difference")
abline(TOPD, lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
abline(lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
Mean.Stats <- rbind(Mean.Stats.Away, Mean.Stats.Home)
plot(Mean.Stats$Team, Mean.Stats$Mean.PF)
plot(Mean.Stats$Team, Mean.Stats$Mean.PF-Mean.Stats$Mean.PA)
plot(Mean.Stats.Home$Team, Mean.Stats.Home$Mean.PF-Mean.Stats.Home$Mean.PA)
View(Mean.Stats)
runApp()
runApp()
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect
install.packages("'rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
library("rsconnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
version()
version
library("rsconnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
rsconnect::setAccountInfo(name='donhescht',
token='1F05B2323B9675E300942B3088F2CB63',
secret='j2nYTG3nm8PBuQmmsBvbKx5BTDXsoswu8ncCW26r')
shiny::runApp()
shiny::runApp()
library(dplyr)
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
plot(data = TOPD, TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference',
xlab = "Turnover Difference", ylab= "Point Difference")
abline(lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
set.seed(100)
TOPD = read.csv("TurnOverPointData.txt")  # [T]urn [O]ver [P]oint [D]ifferential
plot(TOPD$TODifHome,  TOPD$PointDifHome, main = 'Home Team Point Difference Versus Turnover Difference',
xlab = "Turnover Difference", ylab= "Point Difference")
abline(lm(PointDifHome ~ TODifHome, TOPD ), col="red" )
NFLMean <- TOPD %>% group_by(home_team) %>% summarise_all(mean) %>%
select(home_team, home_score, away_score)
View(NFLMean)
plot(NFLMean$home_score,  NFLMean$away_score, main = 'Home Team Scores',
xlab = "PF Mean", ylab= "PA Mean")
library(ggplot2)
NFLMean <- TOPD %>% group_by(home_team) %>% mutate(Wins = as.numeric(home_score>away_score > 0)) %>% summarise_all(mean) %>% select(home_team, home_score, away_score, Wins)
NFLMean <- TOPD %>% group_by(home_team) %>% mutate(Wins = as.numeric(home_score > away_score > 0)) %>% summarise_all(mean) %>% select(home_team, home_score, away_score, Wins)
library(dplyr)
library(ggplot2)
NFLMean <- TOPD %>% group_by(home_team) %>% mutate(Wins = as.numeric(home_score > away_score > 0)) %>% summarise_all(mean) %>% select(home_team, home_score, away_score, Wins)
NFLMean <- TOPD %>% group_by(home_team) %>% mutate(Wins = as.numeric((home_score - away_score) > 0)) %>% summarise_all(mean) %>% select(home_team, home_score, away_score, Wins)
bc <- ggplot(NFLMean aes(x = home_score,  y = away_score, size=Wins)) +
geom_point(shapre=21) + ggtitle("Home Team Mean PF/PA") +
labs(x = "PF Mean", y = "PA Mean")
bc
bc <- ggplot(NFLMean aes(x = home_score,  y = away_score, size=Wins)) +
geom_point(shapre=21) + ggtitle("Home Team Mean PF vs PA") +
labs(x = "PF Mean", y = "PA Mean")
bc <- ggplot(NFLMean aes(x = home_score,  y = away_score, size=Wins)) +
geom_point(shape=21) + ggtitle("Home Team Mean PF vs PA") +
labs(x = "PF Mean", y = "PA Mean")
bc <- ggplot(NFLMean, aes(x = home_score,  y = away_score, size=Wins)) +
geom_point(shape = 21) + ggtitle("Home Team Mean PF vs PA") +
labs(x = "PF Mean", y = "PA Mean")
bc <- ggplot(NFLMean, aes(x = home_score,  y = away_score, size=Wins)) +
geom_point(shape = 21) + ggtitle("Home Team Mean PF vs PA") +
labs(x = "PF Mean", y = "PA Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21) + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=2*Wins)) +
geom_point(shape = 21) + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point() + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(fill = "springgreen") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21, fill = "springgreen") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21, fill = "blue") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean")
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21, fill = "blue") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean") + theme_bw() + theme()
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21, fill = "blue") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean") + theme_bw() + theme() + scale_size(range = c(1,10))
bc
bc <- ggplot(NFLMean, aes(x = away_score,  y = home_score, size=Wins)) +
geom_point(shape = 21, fill = "blue") + ggtitle("Home Team Mean PF vs PA") +
labs( x = "PA Mean", y = "PF Mean") + theme_bw() + theme() + scale_size(range = c(1,20))
bc
runApp()
